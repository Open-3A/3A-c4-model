@startuml Product Module

!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()

Container(security_module, "Módulo de segurança", "Java / Spring Security", "Responsável pela autenticação e autorização de usuários via JWT.")

Boundary(product_module, "Módulo de produto"){
  Component(product_api, "API", "Spring Web", "Expoem os casos de uso de produtos via API REST.")
  Component(product_service, "Serviço de aplicação", "Spring Framework", "Contém regras de aplicação, executa casos de uso e realiza o mapeamento das entidades.")
  Component(product_mapper, "Mapeador", "MapStruct", "Efetua o mapeamento entre entidades de domínio e de aplicação (DataBase Entity e DTO).")

  Boundary(product_use_cases, "Casos de uso"){
    Boundary(only_admins, "Somente administradores"){
      Component(edit_product_use_case, "Editar produto", "Spring Framework", "Realiza uma edição completa ou parcial nas informações do produto.")
      Component(add_product_use_case, "Adicionar produto", "Spring Framework", "Salva um novo produto, caso ainda não exista no banco de dados.")
    }
    Component(list_products_use_case, "Listagem dos produtos", "Spring Framework", "Lista os produtos com paginação e ordenados por categoria, destaque (1º), upgrade (2º), etc.")
    Component(buy_product_use_case, "Comprar produto", "Spring Framework", "Permite a compra de um produto específico na loja, caso o usuário tenha saldo suficiente.")
  }

  Component(product_repository, "Repositório", "Spring Data JPA", "Realiza consultas e inserções de produtos no banco de dados.")
  Component(user_repository, "Repositório de usuário", "Spring Data JPA", "Realiza apenas a consulta e atualização do progresso do usuário no banco de dados.")
}

ContainerDb(db, "Banco de dados", "MongoDB", "Banco de dados não relacional; cada registro possui um atributo 'version' para evitar inconsistências ao versionar a API.")

Rel(security_module, product_api, "Envia requisições")
Rel(product_api, product_service, "Utiliza")
Rel(product_service, product_use_cases, "Executa")
Rel(product_service, product_mapper, "Realiza mapeamento")
Rel(list_products_use_case, product_repository, "Consulta produtos")
Rel(edit_product_use_case, product_repository, "Salva alterações")
Rel(add_product_use_case, product_repository, "Salva novo produto")
Rel(product_repository, db, "Acessa")
Rel(buy_product_use_case, user_repository, "Consulta saldo")
Rel(buy_product_use_case, user_repository, "Atualiza saldo após compra")
Rel(user_repository, db, "Acessa")

@enduml