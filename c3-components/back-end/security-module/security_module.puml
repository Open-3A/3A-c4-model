@startuml Security Module

!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

Person(user, "Usuário", "Pessoa física interagindo com o aplicativo móvel da 3A")

System_Ext(mail, "Sistema de e-mail", "Sistema de envio de e-mails usando SMTP do Gmail para confirmação de criação de conta e redefinição de senha.")
ContainerDb(user_db, "Banco de dados de Usuários", "PostgreSQL", "Banco de dados relacional, para salvar as informações do usuário como nome, e-mail, senha, telefone, cargo e último login para realizar as operações de autenticação e autorização")

Boundary(security_module, "Módulo de segurança"){
  Container(security_api, "API", "Spring Web", "Expoem as informações necessárias do usuário para executar os casos de uso do sistema"){
    Component(security_filters, "Filtros de Segurança", "Spring Security", "Filtros para autenticação, autorização e outros aspectos de segurança")
    Component(security_controllers, "Controllers", "Spring MVC", "Controladores que recebem e gerenciam as requisições HTTP")
  }
  Container(security_service, "Serviço de aplicação", "Spring Framework", "Contêm as regras de aplicação, executa os casos de uso e faz o mapeamento das entidades")
  Container(report_mapper, "Mapeador", "MapStruct", "Realiza o mapeamento entre as entidades de domínio e de aplicação (DataBase Entity e DTO)")

  Boundary(security_use_cases, "Casos de uso"){
    Component(login_use_case, "Log-in", "Spring Framework", "Realiza a verificação do e-mail e senha fornecido pelo usuários com os dados salvos no banco de dados")
    Component(signup_use_case, "Cadastro", "Spring Framework", "Realiza a criação da conta do novo usuário e envia um e-mail para confirmação")
    Component(reset_pwd_use_case, "Redefinir senha", "Spring Framework", "Verifica se o e-mail solicitado existe no banco de dados e envia um e-mail de redefinição de senha")
  }

  Container(user_repository, "Repositório de usuário", "Spring Data JPA", "Realiza apenas a consulta e atualização das funcionalidades desbloqueadas do usuário no banco de dados")
}

Rel(user, security_api, "Faz requisição")
Rel(security_api, security_filters, "Usa")
Rel(security_api, security_controllers, "Usa")
Rel(security_filters, security_service, "Filtra requisições")
Rel(security_service, report_mapper, "Mapeia entidades")
Rel(security_service, security_use_cases, "Executa")
Rel(user_repository, user_db, "Usa")
Rel(login_use_case, user_repository, "Consulta dados")
Rel(signup_use_case, user_repository, "Salva dados")
Rel(signup_use_case, mail, "Envia e-mail de verificação")
Rel(reset_pwd_use_case, user_repository, "Verifica se usuário existe")
Rel(reset_pwd_use_case, mail, "Envia e-mail de redefinição")

@enduml